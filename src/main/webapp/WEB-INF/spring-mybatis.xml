<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        ">
    <!--component-scan和事务所在的上下文不一样，component-scan所在的配置是由servlet加载的，事务所在的配置文件是由Listener加载的。这里重新加载一下Service-->
    <!--参考:http://blog.csdn.net/lzw190/article/details/18989301?source=1-->
    <context:component-scan base-package="com.citi.portfoliomanager" />

    <!--配置以及静态常量-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="1" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:persistence.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${mysql.initialSize}"/>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${mysql.maxActive}"/>
        <!-- 最大空闲连接 -->
        <property name="maxIdle" value="${mysql.maxIdle}"/>
        <!-- 最小空闲连接-->
        <property name="minIdle" value="${mysql.minIdle}"/>
        <!-- 超时等待时间，以毫秒为单位  -->
        <property name="maxWait" value="${mysql.maxWait}"/>
        <!-- 连接被泄露时是否打印 -->
        <property name="logAbandoned" value="true"></property>
        <!-- 是否自动回收超时连接-->
        <property name="removeAbandoned" value="true"></property>
        <!-- 超时时间（以秒数为单位）-->
        <property name="removeAbandonedTimeout" value="${mysql.removeAbandonedTimeout}"/>
        <!-- 在空闲连接回收期线程运行期间休眠的时间值，以毫秒为单位-->
        <property name="timeBetweenEvictionRunsMillis" value="${mysql.timeBetweenEvictionRunsMillis}"/>
        <!-- 在每次空闲连接回收器线程（如果有）运行时检查的连接数量-->
        <property name="numTestsPerEvictionRun" value="${mysql.numTestsPerEvictionRun}"/>

    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <!--如果xml放在main里,记住一定要在pom尾部加上Resources,否则MAVEN不会自动把xml文件编译到classes目录-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类，注册成MapperFactoryBean,
    不需要为每个Mapper单独写一个bean，但注意mapperInterface名字要和xml文件名一致-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.citi.portfoliomanager.dao.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>


    <!-- 事务配置开始 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>